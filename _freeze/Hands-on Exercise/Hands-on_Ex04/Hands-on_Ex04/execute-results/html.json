{
  "hash": "bdd7a1a30192e380676d56e751539330",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Ex 4\"\nauthor: \"Liang Xiuhao Rydia\"\ndate: \"May 3, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# **12  Funnel Plots for Fair Comparisons**\n\n## **12.1 Overview**\n\nFunnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\n-   plotting funnel plots by using **funnelPlotR** package,\n\n-   plotting static funnel plot by using ggplot2 package, and\n\n-   plotting interactive funnel plot by using both **plotly R** and **ggplot2** packages.\n\n## **12.2 Installing and Launching R Packages**\n\nIn this exercise, four R packages will be used. They are:\n\n-   **readr** for importing csv into R.\n\n-   **FunnelPlotR** for creating funnel plot.\n\n-   **ggplot2** for creating funnel plot manually.\n\n-   **knitr** for building static html table.\n\n-   **plotly** for creating interactive funnel plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readr,tidyverse, FunnelPlotR, plotly, knitr)\n```\n:::\n\n\n## **12.3 Importing Data**\n\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from [Open Data Covid-19 Provinsi DKI Jakarta portal](https://riwayat-file-covid-19-dki-jakarta-jakartagis.hub.arcgis.com/). For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\n\nThe code chunk below imports the data into R and save it into a tibble data frame object called *covid19*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n```\n:::\n\n\n## **12.4 FunnelPlotR methods**\n\n[**FunnelPlotR**](https://nhs-r-community.github.io/FunnelPlotR/) package uses ggplot to generate funnel plots. It requires a `numerator` (events of interest), `denominator` (population to be considered) and `group`. The key arguments selected for customisation are:\n\n-   `limit`: plot limits (95 or 99).\n\n-   `label_outliers`: to label outliers (true or false).\n\n-   `Poisson_limits`: to add Poisson limits to the plot.\n\n-   `OD_adjust`: to add overdispersed limits to the plot.\n\n-   `xrange` and `yrange`: to specify the range to display for axes, acts like a zoom function.\n\n-   Other aesthetic components such as graph title, axis labels etc.\n\n### **12.4.1 FunnelPlotR methods: The basic plot**\n\nThe code chunk below plots a funnel plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n```\n\n\n:::\n:::\n\n\n::: {callout-tip}\nThings to learn from the code chunk above.\n\n-   `group` in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\n\n-   By default, `data_type`argument is “SR”.\n\n-   `limit`: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n:::\n\n### **12.4.2 FunnelPlotR methods: Makeover 1**\n\nThe code chunk below plots a funnel plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #<<\n  x_range = c(0, 6500),  #<<\n  y_range = c(0, 0.05)   #<<\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n```\n\n\n:::\n:::\n\n\n::: {callout-tip}\nThings to learn from the code chunk above. + data_type argument is used to change from default “SR” to “PR” (i.e. proportions). + xrange and yrange are used to set the range of x-axis and y-axis\n:::\n\n### **12.4.3 FunnelPlotR methods: Makeover 2**\n\nThe code chunk below plots a funnel plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  x_range = c(0, 6500),  \n  y_range = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #<<           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #<<\n  y_label = \"Cumulative Fatality Rate\"  #<<\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n```\n\n\n:::\n:::\n\n::: {callout-tip}\nThings to learn from the code chunk above.\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles.\n:::\n\n\n\n",
    "supporting": [
      "Hands-on_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}