{
  "hash": "3bd26395f1d9f7fc00fc6eb0b6896a84",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Ex 01\"\nauthor: \"Liang Xiuhao Rydia\"\ndate: \"April 15, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# **Building Elegant and yet Informative Data Visualisation**\n\nFor the final product, you can use the table of content to the right to navigate straight to 3.0 Data Visualisation. If not, you can proceed to enjoy reading the step by step thought process for this visualisation.\n\n## 1.0 Overview\n\n### 1.1 Setting the scene\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly \\$14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent.\n\n### 1.2 The Task\n\nAssuming the role of a graphical editor of a media company, you are requested to prepare minimum two and maximum three data visualisation to reveal the ***private residential market*** and ***sub-markets of Singapore*** for the 1st quarter of 2024.\n\n## 2.0 Set Up\n\n### 2.1 Loading the packages into R\n\nT he `pac::p_load()` function to load the required R packages in the working environment. The following packages are used in this set up:\n\n-   ggthemes: Extra themes, geoms, and scales for ggplot2.\n-   tidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\n-   ggridges: a ggplot2 extension specially designed for plotting ridgeline plots\n-   colorspace:\n-   ggiraph: for making ‘ggplot’ graphics interactive.\n-   plotly: R library for plotting interactive statistical graphs.\n-   patchwork: specially designed for combining separate ggplot2 graphs into a single figure.\n-   To add more...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr,ggridges,ggthemes,colorspace,ggiraph,plotly,patchwork)\n```\n:::\n\n\n### 2.2 Importing the data sets\n\nFive sets of data are provided for this exercise:\n\n1.  2023 Quarter 1 Residential Transaction: ResidentialTransaction20240308160536.csv\n2.  2023 Quarter 2 Residential Transaction: ResidentialTransaction20240308160736.csv\n3.  2023 Quarter 3 Residential Transaction: ResidentialTransaction20240308161009.csv\n4.  2023 Quarter 4 Residential Transaction: ResidentialTransaction20240308161109.csv\n5.  2024 Quarter 1 Residential Transaction: ResidentialTransaction20240414220633.csv\n\nAll five sets of data consists of past transactions between Q1 of 2023 to Q1 of 2024, with 21 variables that will be explored in detail after the data sets are imported.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load transaction data using readr, part of tidyverse package\ndata.23Q1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata.23Q2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata.23Q3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata.23Q4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata.24Q1 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n```\n:::\n\n\nTo add new column `Quarter` into each of the csv file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.23Q1$Quarter <- rep('23Q1',nrow(data.23Q1))\ndata.23Q2$Quarter <- rep('23Q2',nrow(data.23Q2))\ndata.23Q3$Quarter <- rep('23Q3',nrow(data.23Q3))\ndata.23Q4$Quarter <- rep('23Q4',nrow(data.23Q4))\ndata.24Q1$Quarter <- rep('24Q1',nrow(data.24Q1))\n```\n:::\n\n\nCombining all the data set into one\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- rbind(data.23Q1,data.23Q2,data.23Q3,data.23Q4,data.24Q1)\n```\n:::\n\n\nTo have a basic understanding of all 22 variables, `glimpse()` is used with 2024 Q1 data. We can see that there are 21 columns, with the following data types:\n\n-   doubles: `Transacted Price ($)`, `Area (SQFT)`, `Unit Price ($ PSF)`, `Area (SQM)`, `Unit Price ($ PSM)`, `Number of Units`\n\n-   characters: the rest of the 16 variables, including `Quarter`\n\nInterestingly, `Nett Price` is classified as characters, as it contains `-` character, although the rest of the columns should return doubles like `Transacted Price ($)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# have a basic understanding for all 22 variables\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,806\nColumns: 22\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       <chr> \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", …\n```\n\n\n:::\n:::\n\n\n### 2.3 Understanding the data\n\nOn top of the data types that is automatically assigned by R to help the program know how to process it, we can split the data into 4 types of data category to help ourselves for future analytics application. You can refer to the FAQ, Data Dictionary and Methodology in [URA website](https://va24-ry.netlify.app/take-home%20exercise/take-home_ex01/take-home_ex01).\n\n*Qualitative*\n\n1\\. Nominal: `Project Name`, `Address`, `Type of Sale`,\n\n2\\. Ordinal: `Type of Area`, `Property Type`, `Sales Date`, `Purchaser Address Indicator`, `Postal Code`, `Postal District`, `Postal Sector`, `Planning Region`, `Planning Area` and `Quarter`.\n\nSome of the variables I have classified under ordinal are contextual. For example, I can choose to fill in the order for `Purchaser Address Indicator` as `Private` category is higher order than `HDB` category. The context is purchaser that address is `Private` is likely to be a person with higher Social Economic Status (SES) compared to a purchaser with `HDB` as address. Same could be applied to `Postal Code`, `Postal District`, `Postal Sector`, `Planning Region` and `Planning Area`.\n\n*Quantitative*\n\n3\\. Discrete: `Number of Units` and `Tenure`. Note that `Tenure` is still a chr data type as of now. If we choose to use this column for analysis, we do need to do data preparation on this. `Tenure` could also be classified under continuous data for more granularity.\n\n4\\. Continuous: `Transacted Price ($)`,`Area (SQFT)`, `Unit Price ($ PSF)`, `Area (SQM)`, `Unit Price ($ PSM)`, and `Nett Price($)`. Note that `Nett Price($)` is still a chr data type as of now. If we choose to use this column for analysis, we do need to do data preparation on this.\n\nSpecial Case: `Completion Date` is classified as chr, but a quick look at the data `df`, we will realise that this variable is a mix of quantitative and qualitative data type of `Uncomplete` and actual date of completion, which could be converted and analyse as doubles.\n\nSome important observations:\n1\\. `Transacted Price ($)` and `Nett Price($)` are similar. In this analysis, we will use `Transacted Price ($)` for simplicity, as `Nett Price($)` has fair amount of missing data, and it is prices after deducting the value of the indirect discounts or benefits, and not representive for all transactions. \n1\\. `Area (SQFT)` and `Area (SQM)`, and `Unit Price ($ PSF)` and `Unit Price ($ PSM)` are similar measures in different unit. We will use `Area (SQFT)` and `Unit Price ($ PSF)`\n\nNext we look at the basic statistics of the current data using summary()\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data summary\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area        Quarter         \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n```\n\n\n:::\n:::\n\n\nFrom the continuous data above, we can conclude that there is a possibility of extreme outliers. The `Number of Units` has a max of 60, while the 3rd Quartile is 1.000. Let's examine the data by sorting it in descending order using `arrange(desc())` and take a look at data with `Number of Units`, as it greatly affect the analysis of `Transaction Price ($)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Number of Units` > 1) %>%\n  arrange(desc(`Number of Units`)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   <chr>                                <dbl>         <dbl>                <dbl>\n 1 MEYER PARK                       392180000       144883.                 2707\n 2 BAGNALL COURT                    115280000        68491.                 1683\n 3 KEW LODGE                         66800000        25177                  2653\n 4 KARTAR APARTMENTS                 18000000         6964.                 2585\n 5 MONDO MANSION BUIL…                6280000         5490.                 1144\n 6 N.A.                              10600000         6747.                 1571\n 7 N.A.                              61080008        32149.                 1900\n 8 N.A.                              32200000        14123.                 2280\n 9 N.A.                               6150000         4342.                 1416\n10 EAST VIEW GARDEN                   6100000         8338.                  732\n11 N.A.                               8000000         3659.                 2187\n12 CLAYMORE PLAZA                     7000000         4209.                 1663\n# ℹ 18 more variables: `Sale Date` <chr>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>, Quarter <chr>\n```\n\n\n:::\n:::\n\n\nWe have 12 rows that have transactions containing more than 1 unit sold, and a check on the `Address` shows that there are 5 sales that are en bloc cases which should be remove from the analysis. These en bloc cases are likely sales to companies for purpose of redevelopment rather than individual purchasers. See this [link](https://www.businesstimes.com.sg/companies-markets/meyer-park-sold-uol-singapore-land-group-jv-s39218-million-third-en-bloc-attempt) on the Meyer Park en bloc transaction. Otherwise, those 7 cases of transactions with more than one unit sold should be included as are likely the cases of purchase of multiple units or the purchase of multiple adjacent plots of land.\n\nTo lend some background context, you can refer to this link: [Landed vs. Strata Landed](https://plbinsights.com/landed-vs-strata-landed-whats-the-difference-how-have-they-performed-in-recent-years/#:~:text=According%20to%20the%20URA%20website,as%20a%20pure%20landed%20property.) Basically, `Strata` means you only owns the property build on this land, but do not own the land itself. `Land` means you own the land and have more freedom and responsibility in terms of the constructions etc. The application of this knowledge for analysis is that `Strata` and `Land` classification can be identify as the sub-markets as owning a piece of land is likely to be more expensive for the purchaser compared to `Strata` title.\n\nLet's take a quick look at distribution before any data wrangling:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_economist(name = \"Quartiles\") +\n  theme_ridges() +\n  facet_wrap(~`Property Type`,scales = \"free\") +\n  theme_economist() +\n  scale_x_continuous(labels = NULL)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Type of Area` == 'Land') %>%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_grid(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Land: No. of Transactions by Property Type\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Type of Area` == 'Strata') %>%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_wrap(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Strata: No. of Transactions by 'Property Type'\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nSome learning points from these plots: 1. Apartment, Condominium and Terrace House seems to be affected most by outliers. 2. No. of transactions for Apartment classified under `Type of Area` as Land is low.There is no transaction of Condominium and Executive Condominium as these categories of Property Type are always strata for `Type of Sale`. The URA [Methodology](https://www.ura.gov.sg/reis/coverageandMethodology) Miscellaneous tab explains some of the terminologies. 3. No. of transactions for Detached House, Semi-Detached House and Terrace House are low compared to the rest of the three categories. 4. Sub markets to focus on could be the following: - For Land `Type of Sale`: Detached House, Semi-Detached House, and Terrace House. - For Strata `Type of Sale`: Apartment, Condominium, and Executive Condominium.\n\n### 2.4 Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Type of Area` == 'Land') %>%\n  ggplot(aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_grid(~`Property Type`,scales = \"free\") +\n  scale_x_continuous(labels = NULL) +\n  theme_economist()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Type of Area` == 'Land') %>%\n  ggplot(aes(y = `Transacted Price ($)`,\n           x = `Property Type`)) +\n  geom_boxplot()+\n  facet_grid(~Quarter) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  coord_cartesian(xlim=c(1,4),\n                  ylim=c(0,30000000))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Type of Area` == 'Land') %>%\n  ggplot(aes(y = `Transacted Price ($)`,            \n           x = `Property Type`)) +\n  geom_boxplot()+\n  facet_grid(~Quarter) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  coord_cartesian(xlim=c(1,6),\n                  ylim=c(0,10000000))+\n  theme_wsj()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_strata_by_property_type <- df %>%\n  filter(`Type of Area` == 'Strata') %>%\n  group_by(`Property Type`) %>%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\ndf %>%\n  filter(`Type of Area` == 'Strata') %>%\n  ggplot(aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_land_by_property_type <-  df %>%\n  filter(`Type of Area` == 'Land') %>%\n  group_by(`Property Type`) %>%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\ndf %>%\nfilter(`Type of Area` == 'Land') %>%\nggplot(aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  filter(`Type of Area` == 'Strata') %>%\n  ggplot(aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_grid(~`Planning Region`, scales = \"free\")+\n  scale_x_continuous(labels = scales::comma)+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## 3.0 Data Visualisation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquarter_means <- df %>%\n  group_by(Quarter) %>%\n  summarise(mean_tprice = mean(`Transacted Price ($)`))\n\ndf %>%\nggplot(aes(y=`Transacted Price ($)`,\n           x=`Quarter`)\n       )+\n  geom_violin()+\n  geom_point(data = quarter_means, \n             aes(y = mean_tprice), \n             color = \"red\", \n             size = 3)+\n  scale_y_continuous(labels = scales::comma)+\n  ggtitle(\"Distribution of Transacted Prices by Quarter with mean\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nquarter_means <- df %>%\n  filter(`Type of Area` == 'Land') %>%\n  group_by(Quarter) %>%\n  summarise(mean_tprice = mean(`Transacted Price ($)`))\n\ndf %>% \n  ggplot(aes(y=`Transacted Price ($)`,\n             x=`Quarter`))+\n  geom_violin()+\n  geom_point(data = quarter_means, \n             aes(y = mean_tprice), \n             color = \"red\", \n             size = 3)+\n  scale_y_continuous(labels = scales::comma)+\n  ggtitle(\"Distribution of Transacted Prices by Quarter with mean for Land\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nquarter_means <- df %>%\n  filter(`Type of Area` == 'Strata') %>%\n  group_by(Quarter) %>%\n  summarise(mean_tprice = mean(`Transacted Price ($)`))\n\ndf %>%\nggplot(aes(y=`Transacted Price ($)`,\n           x=`Quarter`)\n       )+\n  geom_violin()+\n  coord_cartesian(xlim=c(1,5),\n                  ylim=c(min(df$`Transacted Price ($)`),7500000)) +\n  geom_point(data = quarter_means, \n             aes(y = mean_tprice), \n             color = \"red\", \n             size = 3)+\n  scale_y_continuous(labels = scales::comma)+\n  ggtitle(\"Distribution of Transacted Prices by Quarter with mean for Strata\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df, \n       aes(x=`Property Type`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  facet_grid(~Quarter, scales = \"free\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}