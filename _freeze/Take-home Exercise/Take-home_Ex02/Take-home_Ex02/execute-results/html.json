{
  "hash": "7f24c43b36d82e59c6998a1e78c7a692",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Ex 01\"\nauthor: \"Liang Xiuhao Rydia\"\ndate: \"April 30, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# **DataVisualisation Makeover**\n\n## 1.0 Overview\n\n### 1.1 Setting the scene\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S\\$14,000. For families with monthly household income more than S\\$14,000, they need to turn to the private residential market.\n\n### 1.2 The Task\n\nIn this take-home exercise, you are required to:\n\n-   select **one data visualisation** from the [Take-home Exercise 1 submission](https://isss608-ay2023-24apr.netlify.app/take-home_ex/th_ex01#peer-learning) prepared by your classmate,\n\n-   critic the submission in terms of clarity and aesthetics,\n\n-   prepare a sketch for the alternative design by using the data visualisation design principles and best practices you had learned in Lesson 1 and 2.\n\n-   remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\n### 1.3 The Original Data Visualisation\n\nThe original visualisation can be found in this [link](https://isss608gj.netlify.app/take-home/take-home_ex1/tkx01). I will be using EDA 3 for this take home exercise. Below shows the original plot and the insights by the original creator:\n\n![](EDA 3.png)\n\nðŸ“ˆÂ **Insight:**\\\n- The Central Regionâ€™s peak is the most pronounced and shifted towards the high, indicating that there is a high concentration of properties with higher unit prices.\\\n- The East Regionâ€™s pea is lower and more towards the middle of the x-axis compared to the Central Region. This implies that while the East Region has properties with moderate unit prices, it does not reach as high of a price point as frequently as the Central Region.\\\n- North East and North Regions peaks are less sharp and positioned towards the lower end of the price scale, suggesting a more affordable housing options and a wider distribution of unit prices. North Region appears to have a slightly broader distribution than North East.\\\n- West Region has the lowest peak among all the regions and is positioned towards the far left of the plot. This indicates that the West Region is the most affordable in Singapore.\n\n## 2.0 Set Up\n\nWe will now set up according to the original code provided in the link.\n\n### 2.1 Loading the packages into R\n\nT he `pac::p_load()` function to load the required R packages in the working environment. The following packages are used in this set up:\n\n-   ggthemes: Extra themes, geoms, and scales for ggplot2.\n-   tidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\n-   ggridges: a ggplot2 extension specially designed for plotting ridgeline plots\n-   colorspace:\n-   ggiraph: for making â€˜ggplotâ€™ graphics interactive.\n-   plotly: R library for plotting interactive statistical graphs.\n-   patchwork: specially designed for combining separate ggplot2 graphs into a single figure.\n-   lubridate: for easy and fast parsing of Date / Time\n-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\n-   ggdist: a ggplot2 extension specially design for visualising distribution and uncertainty\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven,\n               ggrepel, ggthemes,\n               ggridges, ggdist,\n               patchwork, scales,\n               viridis, cowplot, \n               dplyr, plotly,\n               tidyr, lubridate, \n               ggplot2, ggExtra)\n```\n:::\n\n\n### 2.2 Importing the data sets\n\nIdentify the missing values in the data set and removed any missing elements. â€˜Type of Saleâ€™ and â€˜Property typeâ€™ has been converted to factor format. â€˜Transacted Price (\\$)â€™ and â€˜Area (SQFT)â€™ are converted to numeric data types. â€˜Type of Saleâ€™ has been group into three categories. â€˜Sale Dateâ€™ has been converted to Date format.\n\nThe process had been repeated for all five data sets.\n\n::: panel-tabset\n## Import Data Set\n\n::: {.cell}\n\n```{.r .cell-code}\nds1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nds2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nds3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nds4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nds5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n```\n:::\n\n## Converting Data\n\n::: {.cell}\n\n```{.r .cell-code}\nprepare_dataset <- function(ds) {\n  colSums(is.na(ds))\n  ds <- na.omit(ds)\n  \n  ds$`Type of Sale` <- tolower(as.character(ds$`Type of Sale`))\n  ds$`Type of Sale` <- ifelse(ds$`Type of Sale` %in% c(\"new sale\", \"resale\"), ds$`Type of Sale`, \"other\")\n  ds$`Type of Sale` <- as.factor(ds$`Type of Sale`)\n  \n  ds$`Property Type` <- as.factor(ds$`Property Type`)\n  \n  ds$`Transacted Price ($)` <- as.numeric(gsub(\"[^0-9.]\", \"\", ds$`Transacted Price ($)`, perl = TRUE))\n  ds$`Area (SQFT)` <- as.numeric(gsub(\"[^0-9.]\", \"\", ds$`Area (SQFT)`, perl = TRUE))\n  ds$`Unit Price ($ PSF)` <- as.numeric(gsub(\"[^0-9.]\", \"\", ds$`Unit Price ($ PSF)`, perl = TRUE))\n  \n  return(ds)\n}\n\n# Apply the function to each dataset\nds1 <- prepare_dataset(ds1)\nds2 <- prepare_dataset(ds2)\nds3 <- prepare_dataset(ds3)\nds4 <- prepare_dataset(ds4)\nds5 <- prepare_dataset(ds5)\n\n# Combine the datasets\ncombined_ds <- rbind(ds1, ds2, ds3, ds4, ds5)\n```\n:::\n\n## Converting Dates\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert Sale Date to Date format\nds1$`Sale Date` <- dmy(ds1$`Sale Date`)\nds2$`Sale Date` <- dmy(ds2$`Sale Date`)\nds3$`Sale Date` <- dmy(ds3$`Sale Date`)\nds4$`Sale Date` <- dmy(ds4$`Sale Date`)\nds5$`Sale Date` <- dmy(ds5$`Sale Date`)\n```\n:::\n\n:::\n\n## 3.0 Critic on the EDA 3\n\n::: panel-tabset\n## The Plot\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n## The Code\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(viridis)\n\nggplot(combined_ds, aes(x = `Unit Price ($ PSF)`, y = `Planning Region`, fill = `Planning Region`)) +\n  geom_density_ridges(scale = 3) +\n  scale_fill_viridis(discrete = TRUE) +\n  labs(title = \"Unit Price ($ PSF) Distribution by Planning Region\",\n       x = \"Unit Price ($ PSF)\",\n       y = \"Planning Region\") +\n  theme_ridges()\n```\n:::\n\n:::\n\n\n## 4.0 References\n\n1\\. T.S. Kam, R for Visual Analytics [Chapter 9](https://r4va.netlify.app/chap09) for visualisation of Ridgeline plots with quantile lines.\n\n2\\. Claus O. Wilke, Fundamentals of Data Visualization [Chapter 2](https://clauswilke.com/dataviz/aesthetic-mapping.html) for understanding and classification of variables.\n\n3\\. Stack Overflow, [\"Filter rows which contain a certain string\"](https://stackoverflow.com/questions/22850026/filter-rows-which-contain-a-certain-string) for removing en bloc sales from the data frame.\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}