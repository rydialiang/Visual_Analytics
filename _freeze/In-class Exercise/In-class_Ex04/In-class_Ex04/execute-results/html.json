{
  "hash": "d6da82e93552d01fe15db3cda8c99177",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Ex04: Visualising Statistical Analysis\"\nauthor: \"Liang Xiuhao Rydia\"\ndate: \"4 May 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\nThe parametric test (student's t):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThe non-parametric(Wilcoxon) test will have median line plotted instead of mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\np_n <- gghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"non-parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n:::\n\n\nHow to save the tibble after plotting: - save the plot as an object \"p_n\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextract_stats(p_n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$subtitle_data\n# A tibble: 1 Ã— 12\n  statistic  p.value method                    alternative effectsize       \n      <dbl>    <dbl> <chr>                     <chr>       <chr>            \n1     38743 3.43e-16 Wilcoxon signed rank test two.sided   r (rank biserial)\n  estimate conf.level conf.low conf.high conf.method n.obs expression\n     <dbl>      <dbl>    <dbl>     <dbl> <chr>       <int> <list>    \n1    0.528       0.95    0.430     0.613 normal        322 <language>\n\n$caption_data\nNULL\n\n$pairwise_comparisons_data\nNULL\n\n$descriptive_data\nNULL\n\n$one_sample_data\nNULL\n\n$tidy_data\nNULL\n\n$glance_data\nNULL\n```\n\n\n:::\n:::\n\n\nThe parametric test (student's t):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe robust(bootstrapped method) test will have trimmed mean line plotted instead of mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"robust\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThe parametric test (student's t):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe bayes test will have not have the Bayes statistics below. mean of MAP used instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAdjusting normal.curve TRUE / FALSE Adjusting normal.curve.args as list\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = TRUE,\n  normal.curve.args = list(linewidth = 0.5),\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nNotes on reading documentation: - Logical value: TRUE or FALSE - normal.curve.arg: can use a list of ggplot's aesthetic arguments\n\nDot plot: - does sorting from highest to lowest and present in percentile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdotplotstats(\n  data = exam,\n  x = ENGLISH,\n  y = CLASS,\n  title = \"\",\n  xlab = \"\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nLooking at the exam tibble:\n\n-   We need to have a subject column and a scores column instead of the current form with Subjects as the header with all the scores as data.\n\n-   Do a pivot table to combine ENGLISH, MATHS, SCIENCE into a subject column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_long <- exam %>%\n  pivot_longer(\n    cols = ENGLISH:SCIENCE,\n    names_to = \"SUBJECT\",\n    values_to = \"SCORES\") %>%\n  filter(CLASS == \"3A\")\n```\n:::\n\n\nNote:Data can be filtered using tidyverse commands\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggwithinstats(\n  data = filter(exam_long,\n                SUBJECT %in%\n                  c(\"MATHS\", \"SCIENCE\")),\n  x = SUBJECT,\n  y = SCORES,\n  type = \"p\"\n)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### Scatterplot with marginal distribution\n\n-   `ggscatterstats()` wrapped scatter plot into the function.\\\n-   `marginal` set to TRUE for marginal distribution.\\\n-   `label.expression` allow us to label/highlight the things we want to focus on.\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  label.var = ID,\n  label.expression = ENGLISH > 90 & MATHS > 90,\n  smooth.line.args = list(linewidth = 1, color = \"red\", method = \"lm\", formula = y ~\n    x)\n  )\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## 10.4 Visualing Models\n\n1.    Diagnostics Test on Models\\\n2.    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "In-class_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}