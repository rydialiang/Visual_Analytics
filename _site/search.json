[
  {
    "objectID": "landing.html",
    "href": "landing.html",
    "title": "My Visual Analytics Learning Journey",
    "section": "",
    "text": "Lesson 1 on 13 Apr 2024:\n\nSetting up my github and netlify account\nLinking git and Quarto.\nLearning to construct website using Quarto in R.\nTried Hands-on Ex01 for visualisation foundation.\nTried In-class Ex01\n\nhow to set up html link in-text, using [text hyperlink](insert html link)\n\n\nLesson 2:"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class Exercise/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages\n\npacman::p_load(tidyverse)\n\n\nrealis.csv &lt;- read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis.csv,\n       aes(x = `Unit Price ($ psm)`)) + \n  geom_histogram()"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class Exercise/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages\n\npacman::p_load(tidyverse)\n\n\nrealis.csv &lt;- read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis.csv,\n       aes(x = `Unit Price ($ psm)`)) + \n  geom_histogram()"
  },
  {
    "objectID": "Hands-on Exercise/hands-on-ex1.html",
    "href": "Hands-on Exercise/hands-on-ex1.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this site",
    "section": "",
    "text": "This site is created as part my course work in Visual Analytics taught by Professor Kam TS. Through this module, I hope to improve my data visualisation skill.\nSkills of a Data Scientists and my progress thus far:\n\n# My Data\nskill_scores &lt;- data.frame(\n    row.names = c(\"Rydia\"),\n    Mathematics = 9,\n    Predictive_modeling = 5,\n    Coding = 1,\n    Machine_learning = 0,\n    Neural_networks = 0,\n    Database_management = 0,\n    Cloud_computing = 0,\n    Communication = 7,\n    Data_visualisation = 3,\n    Critical_thinking = 7\n)\n\nlibrary(fmsb)\n\n# Define the variable ranges: maximum and minimum\nmax_min &lt;- data.frame(\n    Mathematics = c(10,0),\n    Predictive_modeling = c(10,0),\n    Coding = c(10,0),\n    Machine_learning = c(10,0),\n    Neural_networks = c(10,0),\n    Database_management = c(10,0),\n    Cloud_computing = c(10,0),\n    Communication = c(10,0),\n    Data_visualisation = c(10,0),\n    Critical_thinking = c(10,0)\n)\nrownames(max_min) &lt;- c(\"Max\", \"Min\")\n\ndf &lt;- rbind(max_min, skill_scores)\ndf\n\n      Mathematics Predictive_modeling Coding Machine_learning Neural_networks\nMax            10                  10     10               10              10\nMin             0                   0      0                0               0\nRydia           9                   5      1                0               0\n      Database_management Cloud_computing Communication Data_visualisation\nMax                    10              10            10                 10\nMin                     0               0             0                  0\nRydia                   0               0             7                  3\n      Critical_thinking\nMax                  10\nMin                   0\nRydia                 7\n\nry_data &lt;- df[c(\"Max\", \"Min\", \"Rydia\"), ]\nradarchart(ry_data, vlcex = 0.5)"
  },
  {
    "objectID": "hands-on-ex1.html",
    "href": "hands-on-ex1.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"Hands-on Exercise/data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my first Quarto website",
    "section": "",
    "text": "This is my first Quarto website.\nThe picture below shows my brain working at 100% learning about visual analytics.\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "journey.html",
    "href": "journey.html",
    "title": "My Visual Analytics Learning Journey",
    "section": "",
    "text": "Lesson 1 on 13 Apr 2024:\n\nSetting up my github and netlify account\nLinking git and Quarto.\nLearning to construct website using Quarto in R.\nTried Hands-on Ex01 for visualisation foundation.\nTried In-class Ex01\n\nhow to set up html link in-text, using [text hyperlink](insert html link)\n\n\nLesson 2 on 20 Apr 2024:\n\nUsing panel-tabset + calltip\nR4VA Chapter 2"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "For the final product, you can use the table of content to the right to navigate straight to 3.0 Data Visualisation. If not, you can proceed to enjoy reading the step by step thought process for this visualisation.\n\n\n\n\nThere are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly $14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent.\n\n\n\nAssuming the role of a graphical editor of a media company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n\n\n\n\n\nT he pac::p_load() function to load the required R packages in the working environment. The following packages are used in this set up:\n\nggthemes: Extra themes, geoms, and scales for ggplot2.\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nggridges: a ggplot2 extension specially designed for plotting ridgeline plots\ncolorspace:\nggiraph: for making ‘ggplot’ graphics interactive.\nplotly: R library for plotting interactive statistical graphs.\npatchwork: specially designed for combining separate ggplot2 graphs into a single figure.\nlubridate: for easy and fast parsing of Date / Time\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\n\n\n# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr,ggridges,ggthemes,colorspace,ggiraph,plotly,patchwork, ggrepel)\n\n\n\n\nFive sets of data are provided for this exercise:\n\n2023 Quarter 1 Residential Transaction: ResidentialTransaction20240308160536.csv\n2023 Quarter 2 Residential Transaction: ResidentialTransaction20240308160736.csv\n2023 Quarter 3 Residential Transaction: ResidentialTransaction20240308161009.csv\n2023 Quarter 4 Residential Transaction: ResidentialTransaction20240308161109.csv\n2024 Quarter 1 Residential Transaction: ResidentialTransaction20240414220633.csv\n\nAll five sets of data consists of past transactions between Q1 of 2023 to Q1 of 2024, with 21 variables that will be explored in detail after the data sets are imported.\n\n# load transaction data using readr, part of tidyverse package\ndata.23Q1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata.23Q2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata.23Q3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata.23Q4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata.24Q1 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nTo add new column Quarter into each of the csv file.\n\ndata.23Q1$Quarter &lt;- rep('23Q1',nrow(data.23Q1))\ndata.23Q2$Quarter &lt;- rep('23Q2',nrow(data.23Q2))\ndata.23Q3$Quarter &lt;- rep('23Q3',nrow(data.23Q3))\ndata.23Q4$Quarter &lt;- rep('23Q4',nrow(data.23Q4))\ndata.24Q1$Quarter &lt;- rep('24Q1',nrow(data.24Q1))\n\nCombining all the data set into one\n\ndf &lt;- rbind(data.23Q1,data.23Q2,data.23Q3,data.23Q4,data.24Q1)\n\nTo have a basic understanding of all 22 variables, glimpse() is used with 2024 Q1 data. We can see that there are 21 columns, with the following data types:\n\ndoubles: Transacted Price ($), Area (SQFT), Unit Price ($ PSF), Area (SQM), Unit Price ($ PSM), Number of Units\ncharacters: the rest of the 16 variables, including Quarter\n\nInterestingly, Nett Price is classified as characters, as it contains - character, although the rest of the columns should return doubles like Transacted Price ($)\n\n# have a basic understanding for all 22 variables\nglimpse(df)\n\nRows: 26,806\nColumns: 22\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       &lt;chr&gt; \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", …\n\n\n\n\n\nOn top of the data types that is automatically assigned by R to help the program know how to process it, we can split the data into 4 types of data category to help ourselves for future analytics application. You can refer to the FAQ, Data Dictionary and Methodology in URA website.\nQualitative\n1. Nominal: Project Name, Address, Type of Sale,\n2. Ordinal: Type of Area, Property Type, Sales Date, Purchaser Address Indicator, Postal Code, Postal District, Postal Sector, Planning Region, Planning Area and Quarter.\nSome of the variables I have classified under ordinal are contextual. For example, I can choose to fill in the order for Purchaser Address Indicator as Private category is higher order than HDB category. The context is purchaser that address is Private is likely to be a person with higher Social Economic Status (SES) compared to a purchaser with HDB as address. Same could be applied to Postal Code, Postal District, Postal Sector, Planning Region and Planning Area.\nQuantitative\n3. Discrete: Number of Units and Tenure. Note that Tenure is still a chr data type as of now. If we choose to use this column for analysis, we do need to do data preparation on this. Tenure could also be classified under continuous data for more granularity.\n4. Continuous: Transacted Price ($),Area (SQFT), Unit Price ($ PSF), Area (SQM), Unit Price ($ PSM), and Nett Price($). Note that Nett Price($) is still a chr data type as of now. If we choose to use this column for analysis, we do need to do data preparation on this.\nSpecial Case: Completion Date is classified as chr, but a quick look at the data df, we will realise that this variable is a mix of quantitative and qualitative data type of Uncomplete and actual date of completion, which could be converted and analyse as doubles.\nSome important observations: 1. Transacted Price ($) and Nett Price($) are similar. In this analysis, we will use Transacted Price ($) for simplicity, as Nett Price($) has fair amount of missing data, and it is prices after deducting the value of the indirect discounts or benefits, and not representive for all transactions. 1. Area (SQFT) and Area (SQM), and Unit Price ($ PSF) and Unit Price ($ PSM) are similar measures in different unit. We will use Area (SQFT) and Unit Price ($ PSF)\nNext we look at the basic statistics of the current data using summary()\n\nThe OutputThe Code\n\n\n\n\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area        Quarter         \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n\n\n\n\n\n# data summary\nsummary(df)\n\n\n\n\nFrom the continuous data above, we can conclude that there is a possibility of extreme outliers. The Number of Units has a max of 60, while the 3rd Quartile is 1.000. Let’s examine the data by sorting it in descending order using arrange(desc()) and take a look at data with Number of Units, as it greatly affect the analysis of Transaction Price ($).\n\ndf %&gt;%\n  filter(`Number of Units` &gt; 1) %&gt;%\n  arrange(desc(`Number of Units`)) \n\n# A tibble: 12 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 MEYER PARK                       392180000       144883.                 2707\n 2 BAGNALL COURT                    115280000        68491.                 1683\n 3 KEW LODGE                         66800000        25177                  2653\n 4 KARTAR APARTMENTS                 18000000         6964.                 2585\n 5 MONDO MANSION BUIL…                6280000         5490.                 1144\n 6 N.A.                              10600000         6747.                 1571\n 7 N.A.                              61080008        32149.                 1900\n 8 N.A.                              32200000        14123.                 2280\n 9 N.A.                               6150000         4342.                 1416\n10 EAST VIEW GARDEN                   6100000         8338.                  732\n11 N.A.                               8000000         3659.                 2187\n12 CLAYMORE PLAZA                     7000000         4209.                 1663\n# ℹ 18 more variables: `Sale Date` &lt;chr&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Type of Area` &lt;chr&gt;, `Area (SQM)` &lt;dbl&gt;, `Unit Price ($ PSM)` &lt;dbl&gt;,\n#   `Nett Price($)` &lt;chr&gt;, `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;,\n#   Tenure &lt;chr&gt;, `Completion Date` &lt;chr&gt;, `Purchaser Address Indicator` &lt;chr&gt;,\n#   `Postal Code` &lt;chr&gt;, `Postal District` &lt;chr&gt;, `Postal Sector` &lt;chr&gt;,\n#   `Planning Region` &lt;chr&gt;, `Planning Area` &lt;chr&gt;, Quarter &lt;chr&gt;\n\n\nWe have 12 rows that have transactions containing more than 1 unit sold, and a check on the Address shows that there are 5 sales that are en bloc cases which should be remove from the analysis. These en bloc cases are likely sales to companies for purpose of redevelopment rather than individual purchasers. See this link on the Meyer Park en bloc transaction. Otherwise, those 7 cases of transactions with more than one unit sold should be included as are likely the cases of purchase of multiple units or the purchase of multiple adjacent plots of land.\nTo lend some background context, you can refer to this link: Landed vs. Strata Landed Basically, Strata means you only owns the property build on this land, but do not own the land itself. Land means you own the land and have more freedom and responsibility in terms of the constructions etc. The application of this knowledge for analysis is that Strata and Land classification can be identify as the sub-markets as owning a piece of land is likely to be more expensive for the purchaser compared to Strata title.\nLet’s take a quick look at distribution before any data wrangling:\n\ndf %&gt;%\n  ggplot(aes(y = `Transacted Price ($)`,            \n           x = `Property Type`)) +\n  geom_boxplot()+\n  facet_grid(~Quarter) +\n  coord_cartesian(xlim=c(1,6)) +\n  scale_y_continuous(labels = scales::comma) +\n  theme_wsj() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\n\nggplot(data = df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_economist(name = \"Quartiles\") +\n  theme_ridges() +\n  facet_wrap(~`Property Type`,scales = \"free\") +\n  theme_economist() +\n  scale_x_continuous(labels = NULL)\n\n\n\n\n\n\n\n\n\ndf %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_grid(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Land: No. of Transactions by Property Type\")\n\n\n\n\n\n\n\n\n\ndf %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_wrap(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Strata: No. of Transactions by 'Property Type'\")\n\n\n\n\n\n\n\n\nTo understand which Type of Area has high market value by median of total Transacted Price ($):\n\ndf %&gt;%\n  select(`Transacted Price ($)`,`Type of Area`,`Property Type`,`Number of Units`) %&gt;%\n  group_by(`Type of Area`,`Property Type`) %&gt;%\n  summarise(`Median of Transacted Price`= median(`Transacted Price ($)`)) %&gt;%\n  ggplot(aes( y = `Median of Transacted Price`,\n              x = `Property Type`,\n              fill = `Type of Area`)) +\n           geom_point() +\n  theme_wsj()  +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nSome learning points from these plots and tibbles:\n\nApartment, Condominium and Terrace House seems to be affected most by outliers. There are two extreme outliers for transactions in 23Q1 and they are the two en bloc sales with 60 and 47 units of condominium each. As mention, the 5 en bloc sales will be removed from the data set to enable meaningful analysis.\nNo. of transactions for Apartment classified under Type of Area as Land is low.There is no transaction of Condominium and Executive Condominium as these categories of Property Type are always strata for Type of Sale. The URA Methodology Miscellaneous tab explains some of the terminologies.\nNo. of transactions for Detached House, Semi-Detached House and Terrace House are low compared to the rest of the three categories.\nSub markets to focus on based on the number of transactions could be the following lists.\n\nFor Land Type of Sale: Detached House, Semi-Detached House, and Terrace House.\nFor Strata Type of Sale: Apartment, Condominium, and Executive Condominium.\n\nHowever, we should also note that we can prioritise the sub-market for analysis based on the total transactions in each category instead of just looking at volume of transactions. In the Type of Area with Total of Transacted Price ($) tibble above, we see that although Land type transaction low in volume, the total transactions in the 5 quarters are 2 times more than the total transactions of Stata type sales.\n\n\n\n\nIn this section, we aim to clean the data set to ensure the usefulness and accuracy of the visualisation.\nThis is achieved by:\n\nRemoving irrelevant data and outliers\nAppropriate categorisation of variables\nAdditions of new variables to add new dimensions to analysis\n\n\n\n\nFor the follow code chunk, we aim to remove all the enbloc sales, including the 5 transactions that we have found in section 2.3. While we have no idea if there are more than 5 cases of en bloc sales, the follow code chunk will effectively remove all the rows with the string “ENBLOC” in Address column.\n\ndf.c &lt;- df %&gt;%\n  filter(!grepl('ENBLOC', df$Address))\ndf.c\n\n# A tibble: 26,801 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 THE REEF AT KING'S…                2317000          883.                 2625\n 2 URBAN TREASURES                    1823500          883.                 2066\n 3 NORTH GAIA                         1421112         1076.                 1320\n 4 NORTH GAIA                         1258112         1033.                 1218\n 5 PARC BOTANNIA                      1280000          872.                 1468\n 6 NANYANG PARK                       5870000         3323.                 1767\n 7 PALMS @ SIXTH AVEN…                4950000         4521.                 1095\n 8 N.A.                               3260000         1555.                 2096\n 9 WHISTLER GRAND                      850000          441.                 1926\n10 NORTHOAKS                          1268000         1604.                  791\n# ℹ 26,791 more rows\n# ℹ 18 more variables: `Sale Date` &lt;chr&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Type of Area` &lt;chr&gt;, `Area (SQM)` &lt;dbl&gt;, `Unit Price ($ PSM)` &lt;dbl&gt;,\n#   `Nett Price($)` &lt;chr&gt;, `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;,\n#   Tenure &lt;chr&gt;, `Completion Date` &lt;chr&gt;, `Purchaser Address Indicator` &lt;chr&gt;,\n#   `Postal Code` &lt;chr&gt;, `Postal District` &lt;chr&gt;, `Postal Sector` &lt;chr&gt;,\n#   `Planning Region` &lt;chr&gt;, `Planning Area` &lt;chr&gt;, Quarter &lt;chr&gt;\n\n\nIn the df.c tibble, it showed that 5 rows had been removed. Now there is only 26,801 rows instead of the original 26,806 rows in the initial df. This confirm that there are only 5 en bloc sales in the data frame."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly $14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "Assuming the role of a graphical editor of a median company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task-1",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task-1",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr)\n\n# load transaction data using readr, part of tidyverse package\ndata &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\nggplot(data = data, \n       aes(x=`Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data, \n       aes(x=`Type of Area`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data,\n       aes(x =`Planning Area`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-data-visualisation",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-data-visualisation",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr)\n\n# load transaction data using readr, part of tidyverse package\ndata &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\nggplot(data = data, \n       aes(x=`Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data, \n       aes(x=`Type of Area`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data,\n       aes(x =`Planning Area`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#overview",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#overview",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly $14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent.\n\n\n\nAssuming the role of a graphical editor of a media company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#set-up",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#set-up",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "T he pac::p_load() function to load the required R packages in the working environment. The following packages are used in this set up:\n\nggthemes: Extra themes, geoms, and scales for ggplot2.\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nggridges: a ggplot2 extension specially designed for plotting ridgeline plots\ncolorspace:\nggiraph: for making ‘ggplot’ graphics interactive.\nplotly: R library for plotting interactive statistical graphs.\npatchwork: specially designed for combining separate ggplot2 graphs into a single figure.\nlubridate: for easy and fast parsing of Date / Time\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\n\n\n# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr,ggridges,ggthemes,colorspace,ggiraph,plotly,patchwork, ggrepel)\n\n\n\n\nFive sets of data are provided for this exercise:\n\n2023 Quarter 1 Residential Transaction: ResidentialTransaction20240308160536.csv\n2023 Quarter 2 Residential Transaction: ResidentialTransaction20240308160736.csv\n2023 Quarter 3 Residential Transaction: ResidentialTransaction20240308161009.csv\n2023 Quarter 4 Residential Transaction: ResidentialTransaction20240308161109.csv\n2024 Quarter 1 Residential Transaction: ResidentialTransaction20240414220633.csv\n\nAll five sets of data consists of past transactions between Q1 of 2023 to Q1 of 2024, with 21 variables that will be explored in detail after the data sets are imported.\n\n# load transaction data using readr, part of tidyverse package\ndata.23Q1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata.23Q2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata.23Q3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata.23Q4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata.24Q1 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nTo add new column Quarter into each of the csv file.\n\ndata.23Q1$Quarter &lt;- rep('23Q1',nrow(data.23Q1))\ndata.23Q2$Quarter &lt;- rep('23Q2',nrow(data.23Q2))\ndata.23Q3$Quarter &lt;- rep('23Q3',nrow(data.23Q3))\ndata.23Q4$Quarter &lt;- rep('23Q4',nrow(data.23Q4))\ndata.24Q1$Quarter &lt;- rep('24Q1',nrow(data.24Q1))\n\nCombining all the data set into one\n\ndf &lt;- rbind(data.23Q1,data.23Q2,data.23Q3,data.23Q4,data.24Q1)\n\nTo have a basic understanding of all 22 variables, glimpse() is used with 2024 Q1 data. We can see that there are 21 columns, with the following data types:\n\ndoubles: Transacted Price ($), Area (SQFT), Unit Price ($ PSF), Area (SQM), Unit Price ($ PSM), Number of Units\ncharacters: the rest of the 16 variables, including Quarter\n\nInterestingly, Nett Price is classified as characters, as it contains - character, although the rest of the columns should return doubles like Transacted Price ($)\n\n# have a basic understanding for all 22 variables\nglimpse(df)\n\nRows: 26,806\nColumns: 22\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       &lt;chr&gt; \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", …\n\n\n\n\n\nOn top of the data types that is automatically assigned by R to help the program know how to process it, we can split the data into 4 types of data category to help ourselves for future analytics application. You can refer to the FAQ, Data Dictionary and Methodology in URA website.\nQualitative\n1. Nominal: Project Name, Address, Type of Sale,\n2. Ordinal: Type of Area, Property Type, Sales Date, Purchaser Address Indicator, Postal Code, Postal District, Postal Sector, Planning Region, Planning Area and Quarter.\nSome of the variables I have classified under ordinal are contextual. For example, I can choose to fill in the order for Purchaser Address Indicator as Private category is higher order than HDB category. The context is purchaser that address is Private is likely to be a person with higher Social Economic Status (SES) compared to a purchaser with HDB as address. Same could be applied to Postal Code, Postal District, Postal Sector, Planning Region and Planning Area.\nQuantitative\n3. Discrete: Number of Units and Tenure. Note that Tenure is still a chr data type as of now. If we choose to use this column for analysis, we do need to do data preparation on this. Tenure could also be classified under continuous data for more granularity.\n4. Continuous: Transacted Price ($),Area (SQFT), Unit Price ($ PSF), Area (SQM), Unit Price ($ PSM), and Nett Price($). Note that Nett Price($) is still a chr data type as of now. If we choose to use this column for analysis, we do need to do data preparation on this.\nSpecial Case: Completion Date is classified as chr, but a quick look at the data df, we will realise that this variable is a mix of quantitative and qualitative data type of Uncomplete and actual date of completion, which could be converted and analyse as doubles.\nSome important observations: 1. Transacted Price ($) and Nett Price($) are similar. In this analysis, we will use Transacted Price ($) for simplicity, as Nett Price($) has fair amount of missing data, and it is prices after deducting the value of the indirect discounts or benefits, and not representive for all transactions. 1. Area (SQFT) and Area (SQM), and Unit Price ($ PSF) and Unit Price ($ PSM) are similar measures in different unit. We will use Area (SQFT) and Unit Price ($ PSF)\nNext we look at the basic statistics of the current data using summary()\n\nThe OutputThe Code\n\n\n\n\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area        Quarter         \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n\n\n\n\n\n# data summary\nsummary(df)\n\n\n\n\nFrom the continuous data above, we can conclude that there is a possibility of extreme outliers. The Number of Units has a max of 60, while the 3rd Quartile is 1.000. Let’s examine the data by sorting it in descending order using arrange(desc()) and take a look at data with Number of Units, as it greatly affect the analysis of Transaction Price ($).\n\ndf %&gt;%\n  filter(`Number of Units` &gt; 1) %&gt;%\n  arrange(desc(`Number of Units`)) \n\n# A tibble: 12 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 MEYER PARK                       392180000       144883.                 2707\n 2 BAGNALL COURT                    115280000        68491.                 1683\n 3 KEW LODGE                         66800000        25177                  2653\n 4 KARTAR APARTMENTS                 18000000         6964.                 2585\n 5 MONDO MANSION BUIL…                6280000         5490.                 1144\n 6 N.A.                              10600000         6747.                 1571\n 7 N.A.                              61080008        32149.                 1900\n 8 N.A.                              32200000        14123.                 2280\n 9 N.A.                               6150000         4342.                 1416\n10 EAST VIEW GARDEN                   6100000         8338.                  732\n11 N.A.                               8000000         3659.                 2187\n12 CLAYMORE PLAZA                     7000000         4209.                 1663\n# ℹ 18 more variables: `Sale Date` &lt;chr&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Type of Area` &lt;chr&gt;, `Area (SQM)` &lt;dbl&gt;, `Unit Price ($ PSM)` &lt;dbl&gt;,\n#   `Nett Price($)` &lt;chr&gt;, `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;,\n#   Tenure &lt;chr&gt;, `Completion Date` &lt;chr&gt;, `Purchaser Address Indicator` &lt;chr&gt;,\n#   `Postal Code` &lt;chr&gt;, `Postal District` &lt;chr&gt;, `Postal Sector` &lt;chr&gt;,\n#   `Planning Region` &lt;chr&gt;, `Planning Area` &lt;chr&gt;, Quarter &lt;chr&gt;\n\n\nWe have 12 rows that have transactions containing more than 1 unit sold, and a check on the Address shows that there are 5 sales that are en bloc cases which should be remove from the analysis. These en bloc cases are likely sales to companies for purpose of redevelopment rather than individual purchasers. See this link on the Meyer Park en bloc transaction. Otherwise, those 7 cases of transactions with more than one unit sold should be included as are likely the cases of purchase of multiple units or the purchase of multiple adjacent plots of land.\nTo lend some background context, you can refer to this link: Landed vs. Strata Landed Basically, Strata means you only owns the property build on this land, but do not own the land itself. Land means you own the land and have more freedom and responsibility in terms of the constructions etc. The application of this knowledge for analysis is that Strata and Land classification can be identify as the sub-markets as owning a piece of land is likely to be more expensive for the purchaser compared to Strata title.\nLet’s take a quick look at distribution before any data wrangling:\n\ndf %&gt;%\n  ggplot(aes(y = `Transacted Price ($)`,            \n           x = `Property Type`)) +\n  geom_boxplot()+\n  facet_grid(~Quarter) +\n  coord_cartesian(xlim=c(1,6)) +\n  scale_y_continuous(labels = scales::comma) +\n  theme_wsj() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\n\nggplot(data = df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_economist(name = \"Quartiles\") +\n  theme_ridges() +\n  facet_wrap(~`Property Type`,scales = \"free\") +\n  theme_economist() +\n  scale_x_continuous(labels = NULL)\n\n\n\n\n\n\n\n\n\ndf %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_grid(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Land: No. of Transactions by Property Type\")\n\n\n\n\n\n\n\n\n\ndf %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_wrap(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Strata: No. of Transactions by 'Property Type'\")\n\n\n\n\n\n\n\n\nTo understand which Type of Area has high market value by median of total Transacted Price ($):\n\ndf %&gt;%\n  select(`Transacted Price ($)`,`Type of Area`,`Property Type`,`Number of Units`) %&gt;%\n  group_by(`Type of Area`,`Property Type`) %&gt;%\n  summarise(`Median of Transacted Price`= median(`Transacted Price ($)`)) %&gt;%\n  ggplot(aes( y = `Median of Transacted Price`,\n              x = `Property Type`,\n              fill = `Type of Area`)) +\n           geom_point() +\n  theme_wsj()  +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\nSome learning points from these plots and tibbles:\n\nApartment, Condominium and Terrace House seems to be affected most by outliers. There are two extreme outliers for transactions in 23Q1 and they are the two en bloc sales with 60 and 47 units of condominium each. As mention, the 5 en bloc sales will be removed from the data set to enable meaningful analysis.\nNo. of transactions for Apartment classified under Type of Area as Land is low.There is no transaction of Condominium and Executive Condominium as these categories of Property Type are always strata for Type of Sale. The URA Methodology Miscellaneous tab explains some of the terminologies.\nNo. of transactions for Detached House, Semi-Detached House and Terrace House are low compared to the rest of the three categories.\nSub markets to focus on based on the number of transactions could be the following lists.\n\nFor Land Type of Sale: Detached House, Semi-Detached House, and Terrace House.\nFor Strata Type of Sale: Apartment, Condominium, and Executive Condominium.\n\nHowever, we should also note that we can prioritise the sub-market for analysis based on the total transactions in each category instead of just looking at volume of transactions. In the Type of Area with Total of Transacted Price ($) tibble above, we see that although Land type transaction low in volume, the total transactions in the 5 quarters are 2 times more than the total transactions of Stata type sales.\n\n\n\n\nIn this section, we aim to clean the data set to ensure the usefulness and accuracy of the visualisation.\nThis is achieved by:\n\nRemoving irrelevant data and outliers\nAppropriate categorisation of variables\nAdditions of new variables to add new dimensions to analysis\n\n\n\n\nFor the follow code chunk, we aim to remove all the enbloc sales, including the 5 transactions that we have found in section 2.3. While we have no idea if there are more than 5 cases of en bloc sales, the follow code chunk will effectively remove all the rows with the string “ENBLOC” in Address column.\n\ndf.c &lt;- df %&gt;%\n  filter(!grepl('ENBLOC', df$Address))\ndf.c\n\n# A tibble: 26,801 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 THE REEF AT KING'S…                2317000          883.                 2625\n 2 URBAN TREASURES                    1823500          883.                 2066\n 3 NORTH GAIA                         1421112         1076.                 1320\n 4 NORTH GAIA                         1258112         1033.                 1218\n 5 PARC BOTANNIA                      1280000          872.                 1468\n 6 NANYANG PARK                       5870000         3323.                 1767\n 7 PALMS @ SIXTH AVEN…                4950000         4521.                 1095\n 8 N.A.                               3260000         1555.                 2096\n 9 WHISTLER GRAND                      850000          441.                 1926\n10 NORTHOAKS                          1268000         1604.                  791\n# ℹ 26,791 more rows\n# ℹ 18 more variables: `Sale Date` &lt;chr&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Type of Area` &lt;chr&gt;, `Area (SQM)` &lt;dbl&gt;, `Unit Price ($ PSM)` &lt;dbl&gt;,\n#   `Nett Price($)` &lt;chr&gt;, `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;,\n#   Tenure &lt;chr&gt;, `Completion Date` &lt;chr&gt;, `Purchaser Address Indicator` &lt;chr&gt;,\n#   `Postal Code` &lt;chr&gt;, `Postal District` &lt;chr&gt;, `Postal Sector` &lt;chr&gt;,\n#   `Planning Region` &lt;chr&gt;, `Planning Area` &lt;chr&gt;, Quarter &lt;chr&gt;\n\n\nIn the df.c tibble, it showed that 5 rows had been removed. Now there is only 26,801 rows instead of the original 26,806 rows in the initial df. This confirm that there are only 5 en bloc sales in the data frame."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#data-visualisation",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#data-visualisation",
    "title": "Take-home Ex 01",
    "section": "3.0 Data Visualisation",
    "text": "3.0 Data Visualisation\n\ndf.c %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  ggplot(aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_grid(~`Property Type`,scales = \"free\") +\n  scale_x_continuous(labels = NULL) +\n  theme_economist()\n\n\n\n\n\n\n\n\n\ndf.c %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  ggplot(aes(y = `Transacted Price ($)`,\n           x = `Quarter`)) +\n  geom_boxplot()+\n  facet_grid(~`Property Type`) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  coord_cartesian(xlim=c(1,4)) +\n  geom_label_repel(aes(label = `Project Name`),\n                   hjust = 0.5,\n                   vjust = 0.5)\n\n\n\n\n\n\n\n\n\ndf.c %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  ggplot(aes(y = `Transacted Price ($)`,            \n           x = Quarter)) +\n  geom_boxplot()+\n  facet_grid(~`Property Type`) +\n  coord_cartesian(xlim=c(1,6)) +\n  scale_y_continuous(labels = scales::comma) +\n  theme_wsj()  +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\n\nmean_strata_by_property_type &lt;- df.c %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\ndf.c %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  ggplot(aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nmean_land_by_property_type &lt;-  df.c %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\ndf.c %&gt;%\nfilter(`Type of Area` == 'Land') %&gt;%\nggplot(aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n\n\n\n\n\n\n\n\n\ndf.c %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  ggplot(aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_grid(~`Planning Region`, scales = \"free\")+\n  scale_x_continuous(labels = scales::comma) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#overview",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#overview",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "This chapter / Hands-on exercise is an introduction to several ggplot2 extension. Key idea is to create more elegant and effective statistical graphics, pleasing to the eyes of the reader, and reducing the cognitive load of the reader.\nKey learning:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#getting-started",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "2 Getting started",
    "text": "2 Getting started\n\nInstalling and loading the required librariesImporting dataglimpse() the Data\n\n\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel,patchwork,\n               ggthemes,hrbrthemes,\n               tidyverse)\n\n\n\nFor the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nCategorical attributes: ID, CLASS, GENDER and RACE.\nContinuous attributes: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "This chapter / Hands-on exercise is an introduction to several ggplot2 extension. Key idea is to create more elegant and effective statistical graphics, pleasing to the eyes of the reader, and reducing the cognitive load of the reader.\nKey learning:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages\nplot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "3 Beyond ggplot2 Annotation: ggrepel",
    "text": "3 Beyond ggplot2 Annotation: ggrepel\nAnnotation for large number of data points is potentially challenging, as the annotations may overwhelm the plot. In this example, geom_label() is used to show the labels on all the data points. The resulting plot below shows the annotation covering much of the data points.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = 0.5, \n             vjust = 0.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in our example above.\nWe simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(x= MATHS,\n       y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  geom_label_repel(aes(label = ID),\n                   hjust = 0.5,\n                   vjust = 0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "Working with ggrepel",
    "text": "Working with ggrepel\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(x= MATHS,\n       y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  geom_label_repel(aes(label = ID),\n                   hjust = 0.5,\n                   vjust = 0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "4 Beyond ggplot2 Themes",
    "text": "4 Beyond ggplot2 Themes\nThere are eight built-in themes in ggplot2. You can browse through the plots of all the themes below. Visit this link to learn more about ggplot2 Themes.\n\n1. theme_gray() - Default2. theme_bw()3. theme_classic()4. theme_dark()5. theme_light()6. theme_linedraw()7. theme_minimal()8. theme_void()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoints to note\n\nNote 1\nNote 2"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_bw",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_bw",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "2. theme_bw()",
    "text": "2. theme_bw()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_classic",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_classic",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "3. theme_classic()",
    "text": "3. theme_classic()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_dark",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_dark",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "4. theme_dark()",
    "text": "4. theme_dark()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_light",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_light",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "5. theme_light()",
    "text": "5. theme_light()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_linedraw",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_linedraw",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "6. theme_linedraw()",
    "text": "6. theme_linedraw()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_minimal",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_minimal",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "7. theme_minimal()",
    "text": "7. theme_minimal()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_void",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#theme_void",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "8. theme_void()",
    "text": "8. theme_void()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggtheme package",
    "text": "4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nIn the example below, wsj theme is used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(x = MATHS,\n       y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  ggtitle(\"English versus Maths scores\") +\n  geom_label_repel(aes(label = ID), \n                   max.overlaps = 5) +  \n  theme_wsj()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggthemes-package",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggthemes-package",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggthemes package",
    "text": "4.1 Working with ggthemes package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nIn the example below, wsj theme is used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(x = MATHS,\n       y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  ggtitle(\"English versus Maths scores\") +\n  geom_label_repel(aes(label = ID), \n                   max.overlaps = 5) +  \n  theme_wsj()\n\n\n\n\n\n\n\n\n\n\nAdditional tip on ggthemes\n\n\n\n\nVisit this link for the overview of the applications of each theme."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbrthemes-package",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbrthemes-package",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "4.2 Working with hrbrthemes package",
    "text": "4.2 Working with hrbrthemes package\nThe hrbrthemes is a collection of custom themes and utility functions for creating visually appealing and consistent plots using ggplot2. This package is developed by Bob Rudis (hrbrmstr) and offers an assortment of themes and utilities that can enhance the aesthetics and readability of your ggplot2 visualisations.\n\nOriginalWith FT Theme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "5 Beyond Single Graph",
    "text": "5 Beyond Single Graph\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, you will learn how to create composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.\n\nThe plotThe code\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\nNext, we create two more graphs.\n\nThe plotThe code\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\nThe plotThe code"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "5.1 Creating Composite Graphics: patchwork methods",
    "text": "5.1 Creating Composite Graphics: patchwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily.\nGeneral syntax that combines: - Two-Column Layout using the Plus Sign +. - Parenthesis () to create a subplot group. - Two-Row Layout using the Division Sign /\n\n5.2 Combining the ggplot2 graphs\n\nThe plot using +The code using +The plot using all 3 syntaxThe code using all 3 syntax\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 + p2) / p3\n\n\n\n\nRefer to Plot Assembly to learn more about nesting and wrapping of plots.\n\n\n5.3 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 + p2) / p3 + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "5.4 Creating figure with insert",
    "text": "5.4 Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Ex 2: Beyond ggplot2 Fundamentals",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_ft_rc() of ggthemes package discussed earlier.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 + p2) / p3\npatchwork & theme_ft_rc()"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#section",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#section",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "quarter_means &lt;- df.c %&gt;%\n  group_by(Quarter) %&gt;%\n  summarise(mean_tprice = mean(`Transacted Price ($)`))\n\ndf.c %&gt;%\nggplot(aes(y=`Transacted Price ($)`,\n           x=`Quarter`)\n       )+\n  geom_violin()+\n  geom_point(data = quarter_means, \n             aes(y = mean_tprice), \n             color = \"red\", \n             size = 3)+\n  scale_y_continuous(labels = scales::comma)+\n  ggtitle(\"Distribution of Transacted Prices by Quarter with mean\")\n\n\n\n\n\n\n\n\n\nquarter_means &lt;- df.c %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  group_by(Quarter) %&gt;%\n  summarise(mean_tprice = mean(`Transacted Price ($)`))\n\ndf.c %&gt;% \n  ggplot(aes(y=`Transacted Price ($)`,\n             x=`Quarter`))+\n  geom_violin()+\n  geom_point(data = quarter_means, \n             aes(y = mean_tprice), \n             color = \"red\", \n             size = 3)+\n  scale_y_continuous(labels = scales::comma)+\n  ggtitle(\"Distribution of Transacted Prices by Quarter with mean for Land\")\n\n\n\n\n\n\n\n\n\nquarter_means &lt;- df.c %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  group_by(Quarter) %&gt;%\n  summarise(mean_tprice = mean(`Transacted Price ($)`))\n\ndf.c %&gt;%\nggplot(aes(y=`Transacted Price ($)`,\n           x=`Quarter`)\n       )+\n  geom_violin()+\n  coord_cartesian(xlim=c(1,5),\n                  ylim=c(min(df$`Transacted Price ($)`),7500000)) +\n  geom_point(data = quarter_means, \n             aes(y = mean_tprice), \n             color = \"red\", \n             size = 3)+\n  scale_y_continuous(labels = scales::comma)+\n  ggtitle(\"Distribution of Transacted Prices by Quarter with mean for Strata\")\n\n\n\n\n\n\n\n\n\nggplot(data = df, \n       aes(x=`Property Type`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  facet_grid(~Quarter, scales = \"free\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\n\ndf.c %&gt;%\n  glimpse()\n\nRows: 26,801\nColumns: 22\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       &lt;chr&gt; \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", …"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "pacman::p_load(tidyverse,ggdist,ggthemes,colorspaces,ggridges)\nexam_df &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#histogram",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#histogram",
    "title": "In-class_Ex02",
    "section": "Histogram",
    "text": "Histogram\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam_df,\n       aes(x = ENGLISH)) +\n  geom_histogram()\n\n\n\n\n\n\n\n\n\n\n\n\n\n:::\n\nggplot(exam_df,\n       aes(x = ENGLISH)) +\n  geom_density(\n    color = \"#1696d2\",\n    adjust = .65,\n    alpha = .6\n  )"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#the-alternative-design",
    "href": "In-class Exercise/In-class_Ex02/In-class_Ex02.html#the-alternative-design",
    "title": "In-class_Ex02",
    "section": "The alternative design",
    "text": "The alternative design\n\nmedian_eng &lt;- median(exam_df$ENGLISH)\nmean_eng &lt;- mean(exam_df$ENGLISH)\nstd_eng &lt;- sd(exam_df$ENGLISH)\n\nggplot(exam_df,\n       aes(x= ENGLISH)) +\n  geom_density(\n    color = \"#1696d2\",\n    adjust = .65,\n    alpha = .6) +\n  stat_function(\n    fun = dnorm,\n    args = list(mean = mean_eng,\n                sd = std_eng),\n    col = \"grey30\",\n    linewidth = .8) +\n  geom_vline(\n    aes(xintercept = mean_eng),\n    color = \"#4d5887\",\n    linewidth = .6,\n    linetype = \"dashed\") +\n  annotate(geom = \"text\",\n           x = mean_eng - 8,\n           y = 0.04,\n           label = paste0(\"Mean ENGLISH: \",\n                          round((mean_eng), 2)),\n           color = \"#4d5887\") +\n  geom_vline(\n    aes(xintercept = median_eng)\n  )"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-code",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-code",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area        Quarter         \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n\n\n:::\nFrom the continuous data above, we can conclude that there is a possibility of extreme outliers. The Number of Units has a max of 60, while the 3rd Quartile is 1.000. Let’s examine the data by sorting it in descending order using arrange(desc()) and take a look at data with Number of Units, as it greatly affect the analysis of Transaction Price ($).\n\ndf %&gt;%\n  filter(`Number of Units` &gt; 1) %&gt;%\n  arrange(desc(`Number of Units`)) \n\n# A tibble: 12 × 22\n   `Project Name`      `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n   &lt;chr&gt;                                &lt;dbl&gt;         &lt;dbl&gt;                &lt;dbl&gt;\n 1 MEYER PARK                       392180000       144883.                 2707\n 2 BAGNALL COURT                    115280000        68491.                 1683\n 3 KEW LODGE                         66800000        25177                  2653\n 4 KARTAR APARTMENTS                 18000000         6964.                 2585\n 5 MONDO MANSION BUIL…                6280000         5490.                 1144\n 6 N.A.                              10600000         6747.                 1571\n 7 N.A.                              61080008        32149.                 1900\n 8 N.A.                              32200000        14123.                 2280\n 9 N.A.                               6150000         4342.                 1416\n10 EAST VIEW GARDEN                   6100000         8338.                  732\n11 N.A.                               8000000         3659.                 2187\n12 CLAYMORE PLAZA                     7000000         4209.                 1663\n# ℹ 18 more variables: `Sale Date` &lt;chr&gt;, Address &lt;chr&gt;, `Type of Sale` &lt;chr&gt;,\n#   `Type of Area` &lt;chr&gt;, `Area (SQM)` &lt;dbl&gt;, `Unit Price ($ PSM)` &lt;dbl&gt;,\n#   `Nett Price($)` &lt;chr&gt;, `Property Type` &lt;chr&gt;, `Number of Units` &lt;dbl&gt;,\n#   Tenure &lt;chr&gt;, `Completion Date` &lt;chr&gt;, `Purchaser Address Indicator` &lt;chr&gt;,\n#   `Postal Code` &lt;chr&gt;, `Postal District` &lt;chr&gt;, `Postal Sector` &lt;chr&gt;,\n#   `Planning Region` &lt;chr&gt;, `Planning Area` &lt;chr&gt;, Quarter &lt;chr&gt;\n\n\nWe have 12 rows that have transactions containing more than 1 unit sold, and a check on the Address shows that there are 5 sales that are en bloc cases which should be remove from the analysis. These en bloc cases are likely sales to companies for purpose of redevelopment rather than individual purchasers. See this link on the Meyer Park en bloc transaction. Otherwise, those 7 cases of transactions with more than one unit sold should be included as are likely the cases of purchase of multiple units or the purchase of multiple adjacent plots of land.\nTo lend some background context, you can refer to this link: Landed vs. Strata Landed Basically, Strata means you only owns the property build on this land, but do not own the land itself. Land means you own the land and have more freedom and responsibility in terms of the constructions etc. The application of this knowledge for analysis is that Strata and Land classification can be identify as the sub-markets as owning a piece of land is likely to be more expensive for the purchaser compared to Strata title.\nLet’s take a quick look at distribution before any data wrangling:\n\ndf %&gt;%\n  ggplot(aes(y = `Transacted Price ($)`,            \n           x = `Property Type`)) +\n  geom_boxplot()+\n  facet_grid(~Quarter) +\n  coord_cartesian(xlim=c(1,6)) +\n  scale_y_continuous(labels = scales::comma) +\n  theme_wsj() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n\n\n\n\n\n\nggplot(data = df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_economist(name = \"Quartiles\") +\n  theme_ridges() +\n  facet_wrap(~`Property Type`,scales = \"free\") +\n  theme_economist() +\n  scale_x_continuous(labels = NULL)\n\n\n\n\n\n\n\n\n\ndf %&gt;%\n  filter(`Type of Area` == 'Land') %&gt;%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_grid(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Land: No. of Transactions by Property Type\")\n\n\n\n\n\n\n\n\n\ndf %&gt;%\n  filter(`Type of Area` == 'Strata') %&gt;%\n  ggplot(aes(x= `Quarter`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  facet_wrap(~`Property Type`) +\n  theme_economist() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ggtitle(\"Strata: No. of Transactions by 'Property Type'\")\n\n\n\n\n\n\n\n\nSome learning points from these plots:\n\nApartment, Condominium and Terrace House seems to be affected most by outliers. There are two extreme outliers for transactions in 23Q1 and they are the two en bloc sales with 60 and 47 units of condominium each. As mention, the 5 en bloc sales will be removed from the data set to enable meaningful analysis.\nNo. of transactions for Apartment classified under Type of Area as Land is low.There is no transaction of Condominium and Executive Condominium as these categories of Property Type are always strata for Type of Sale. The URA Methodology Miscellaneous tab explains some of the terminologies.\nNo. of transactions for Detached House, Semi-Detached House and Terrace House are low compared to the rest of the three categories.\nSub markets to focus on could be the following:\n\nFor Land Type of Sale: Detached House, Semi-Detached House, and Terrace House.\nFor Strata Type of Sale: Apartment, Condominium, and Executive Condominium.\n\n\n\n\nIn this section, we aim to clean the data set to ensure the usefulness and accuracy of the visualisation.\nThis is achieved by:\n\nRemoving outliers\nAppropriate categorisation of variables\nAdditions of new variables to add new dimensions to analysis"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#references",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#references",
    "title": "Take-home Ex 01",
    "section": "4.0 References",
    "text": "4.0 References\n1. T.S. Kam, R for Visual Analytics Chapter 9 for visualisation of Ridgeline plots with quantile lines.\n2. Claus O. Wilke, Fundamentals of Data Visualization Chapter 2 for understanding and classification of variables.\n3. Stack Overflow, “Filter rows which contain a certain string” for removing en bloc sales from the data frame."
  }
]