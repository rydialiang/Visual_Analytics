[
  {
    "objectID": "landing.html",
    "href": "landing.html",
    "title": "My Visual Analytics Learning Journey",
    "section": "",
    "text": "Lesson 1 on 13 Apr 2024:\n\nSetting up my github and netlify account\nLinking git and Quarto.\nLearning to construct website using Quarto in R.\nTried Hands-on Ex01 for visualisation foundation.\nTried In-class Ex01\n\nhow to set up html link in-text, using [text hyperlink](insert html link)\n\n\nLesson 2:"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class Exercise/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages\n\npacman::p_load(tidyverse)\n\n\nrealis.csv &lt;- read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis.csv,\n       aes(x = `Unit Price ($ psm)`)) + \n  geom_histogram()"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class Exercise/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages\n\npacman::p_load(tidyverse)\n\n\nrealis.csv &lt;- read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis.csv,\n       aes(x = `Unit Price ($ psm)`)) + \n  geom_histogram()"
  },
  {
    "objectID": "Hands-on Exercise/hands-on-ex1.html",
    "href": "Hands-on Exercise/hands-on-ex1.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this site",
    "section": "",
    "text": "This site is created as part my course work in Visual Analytics taught by Professor Kam TS. Through this module, I hope to improve my data visualisation skill.\nSkills of a Data Scientists and my progress thus far:\n\n# My Data\nskill_scores &lt;- data.frame(\n    row.names = c(\"Rydia\"),\n    Mathematics = 9,\n    Predictive_modeling = 5,\n    Coding = 1,\n    Machine_learning = 0,\n    Neural_networks = 0,\n    Database_management = 0,\n    Cloud_computing = 0,\n    Communication = 7,\n    Data_visualisation = 3,\n    Critical_thinking = 7\n)\n\nlibrary(fmsb)\n\n# Define the variable ranges: maximum and minimum\nmax_min &lt;- data.frame(\n    Mathematics = c(10,0),\n    Predictive_modeling = c(10,0),\n    Coding = c(10,0),\n    Machine_learning = c(10,0),\n    Neural_networks = c(10,0),\n    Database_management = c(10,0),\n    Cloud_computing = c(10,0),\n    Communication = c(10,0),\n    Data_visualisation = c(10,0),\n    Critical_thinking = c(10,0)\n)\nrownames(max_min) &lt;- c(\"Max\", \"Min\")\n\ndf &lt;- rbind(max_min, skill_scores)\ndf\n\n      Mathematics Predictive_modeling Coding Machine_learning Neural_networks\nMax            10                  10     10               10              10\nMin             0                   0      0                0               0\nRydia           9                   5      1                0               0\n      Database_management Cloud_computing Communication Data_visualisation\nMax                    10              10            10                 10\nMin                     0               0             0                  0\nRydia                   0               0             7                  3\n      Critical_thinking\nMax                  10\nMin                   0\nRydia                 7\n\nry_data &lt;- df[c(\"Max\", \"Min\", \"Rydia\"), ]\nradarchart(ry_data, vlcex = 0.5)"
  },
  {
    "objectID": "hands-on-ex1.html",
    "href": "hands-on-ex1.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"Hands-on Exercise/data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my first Quarto website",
    "section": "",
    "text": "This is my first Quarto website.\nThe picture below shows my brain working at 100% learning about visual analytics.\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "journey.html",
    "href": "journey.html",
    "title": "My Visual Analytics Learning Journey",
    "section": "",
    "text": "Lesson 1 on 13 Apr 2024:\n\nSetting up my github and netlify account\nLinking git and Quarto.\nLearning to construct website using Quarto in R.\nTried Hands-on Ex01 for visualisation foundation.\nTried In-class Ex01\n\nhow to set up html link in-text, using [text hyperlink](insert html link)\n\n\nLesson 2 on 20 Apr 2024:"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly $14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent.\n\n\n\nAssuming the role of a graphical editor of a media company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n\n\n\n\n\nT he pac::p_load() function to load the required R packages in the working environment. The following packages are used in this set up:\n\nggthemes: Extra themes, geoms, and scales for ggplot2.\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nggridges: a ggplot2 extension specially designed for plotting ridgeline plots\ncolorspace:\nggiraph: for making ‘ggplot’ graphics interactive.\nplotly: R library for plotting interactive statistical graphs.\npatchwork: specially designed for combining separate ggplot2 graphs into a single figure.\n\n\n# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr,ggridges,ggthemes,colorspace,ggiraph,plotly,patchwork)\n\n\n\n\nFive sets of data are provided for this exercise:\n\n2023 Quarter 1 Residential Transaction: ResidentialTransaction20240308160536.csv\n2023 Quarter 2 Residential Transaction: ResidentialTransaction20240308160736.csv\n2023 Quarter 3 Residential Transaction: ResidentialTransaction20240308161009.csv\n2023 Quarter 4 Residential Transaction: ResidentialTransaction20240308161109.csv\n2024 Quarter 1 Residential Transaction: ResidentialTransaction20240414220633.csv\n\nAll five sets of data consists of past transactions between Q1 of 2023 to Q1 of 2024, with 21 variables that will be explored in detail after the data sets are imported.\n\n# load transaction data using readr, part of tidyverse package\ndata.23Q1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata.23Q2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata.23Q3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata.23Q4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata.24Q1 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nTo add new column Quarter into each of the csv file.\n\ndata.23Q1$Quarter &lt;- rep('23Q1',nrow(data.23Q1))\ndata.23Q2$Quarter &lt;- rep('23Q2',nrow(data.23Q2))\ndata.23Q3$Quarter &lt;- rep('23Q3',nrow(data.23Q3))\ndata.23Q4$Quarter &lt;-rep('23Q4',nrow(data.23Q4))\ndata.24Q1$Quarter &lt;- rep('24Q1',nrow(data.24Q1))\n\nCombining all the data set into one\n\ndf &lt;- rbind(data.23Q1,data.23Q2,data.23Q3,data.23Q4,data.24Q1)\n\nTo have a basic understanding of all 21 variables, glimpse() is used with 2024 Q1 data. We can see that there are 21 columns, with the following data types:\n\ndoubles:\n\nTransacted Price ($)\nArea (SQFT)\nUnit Price ($ PSF)\nArea (SQM)\nUnit Price ($ PSM)\nNumber of Units\n\ncharacters: the rest of the 16 variables, including Quarter\n\n\n# have a basic understanding for all 22 variables\nglimpse(df)\n\nRows: 26,806\nColumns: 22\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       &lt;chr&gt; \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", …\n\n\n\n\n\n\nggplot(data = df, \n       aes(x=Quarter, fill = `Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = df, \n       aes(y = `Transacted Price ($)`, x = Quarter)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nFrom the boxplot above, it seems like there are outliers in 23Q1 that are extremely far from the rest of the data points. We may choose to exclude these transactions to have a better data set. However, given that this are all the actual transactions that have happened in the past five quarters, it may not be a good idea to exclude these data.\nHence, we could explore other options such as comparing the selecting similar property types to make more meaningful conclusion.\n\nggplot(data = df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = 0.5)) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Transacted Price\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Transacted Price\",\n    expand = c(0,0)\n  ) +\n  scale_y_discrete(\n    name = NULL,\n    expand = expansion(add = c(0.2,2.6))\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(data = df, \n       aes(x=`Type of Area`,\n           fill = `Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\nLooking at the bar chart above, it might be a good way to filter the data based on Type of Area to do further analysis. To lend some background context to this segregation, you can refer to this link: Landed vs. Strata Landed From this link, we can also derive further segregation by Property Type.\n\nland_df &lt;- filter(df, `Type of Area` == 'Land')\nstrata_df&lt;- filter(df, `Type of Area` == 'Strata')\n\n\nggplot(data = land_df, \n       aes(x= `Property Type`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~Quarter)\n\n\n\n\n\n\n\n\n\nggplot(data = land_df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_wrap(~`Property Type`,scales = \"free\")\n\n\n\n\n\n\n\n\n\nggplot(data = land_df, \n       aes(y = `Transacted Price ($)`, x = Quarter)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nmean_strata_by_property_type &lt;- strata_df %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\nggplot(strata_df,\n       aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nmean_land_by_property_type &lt;- land_df %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\nggplot(land_df,\n       aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nggplot(data = strata_df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_wrap(~`Planning Region`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nggplot(data = df,\n       aes(x =`Purchaser Address Indicator`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~`Planning Region`)+\n  ggtitle(\"Purchaser Address Indicator by Planning Region\")\n\n\n\n\n\n\n\n\n\nB &lt;- ggplot(data = land_df,\n       aes(x =`Purchaser Address Indicator`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~`Planning Region`) +\n  ggtitle(\"Land:Purchaser Address Indicator by Planning Region\")\n\n\nC &lt;- ggplot(data = strata_df,\n       aes(x =`Purchaser Address Indicator`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~`Planning Region`) +\n  ggtitle(\"Strata:Purchaser Address Indicator by Planning Region\")\n\n\n\n\n\n\n(B/C)+\n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly $14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "Assuming the role of a graphical editor of a median company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task-1",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-task-1",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr)\n\n# load transaction data using readr, part of tidyverse package\ndata &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\nggplot(data = data, \n       aes(x=`Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data, \n       aes(x=`Type of Area`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data,\n       aes(x =`Planning Area`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-data-visualisation",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#the-data-visualisation",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr)\n\n# load transaction data using readr, part of tidyverse package\ndata &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\n# have a basic understanding for all 21 variables\nglimpse(data)\n\nRows: 4,902\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE LANDMARK\", \"POLLEN COLLECTION\", \"SK…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2726888, 3850000, 2346000, 2190000, 1954…\n$ `Area (SQFT)`                 &lt;dbl&gt; 1076.40, 1808.35, 1087.16, 807.30, 796.5…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2533, 2129, 2158, 2713, 2453, 2577, 838,…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2024\", \"01 Jan 2024\", \"01 Jan 20…\n$ Address                       &lt;chr&gt; \"173 CHIN SWEE ROAD #22-11\", \"34 POLLEN …\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Land\", \"Strata\", \"Strata\", \"S…\n$ `Area (SQM)`                  &lt;dbl&gt; 100.0, 168.0, 101.0, 75.0, 74.0, 123.0, …\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 27269, 22917, 23228, 29200, 26405, 27741…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Terrace House\", \"Apartme…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 28/08/2020\", \"99 yrs from 0…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"Private\", \"N.A\", \"HDB\", \"N.A\", \"Private…\n$ `Postal Code`                 &lt;chr&gt; \"169878\", \"807233\", \"469657\", \"118992\", …\n$ `Postal District`             &lt;chr&gt; \"03\", \"28\", \"16\", \"05\", \"21\", \"21\", \"28\"…\n$ `Postal Sector`               &lt;chr&gt; \"16\", \"80\", \"46\", \"11\", \"59\", \"58\", \"79\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"North East Region\", \"…\n$ `Planning Area`               &lt;chr&gt; \"Outram\", \"Serangoon\", \"Bedok\", \"Queenst…\n\n\n\nggplot(data = data, \n       aes(x=`Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data, \n       aes(x=`Type of Area`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = data,\n       aes(x =`Planning Area`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#overview",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#overview",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly $14,000 for families/couples buying a new HDB flat. Singapore is a city-state with limited land resource. Housing, on the other hand, is one of the basic need of people of this city-state. In order to ensure that all citizen in the country can access to affordable housing, the government have initiated massive public housing programme since independent.\n\n\n\nAssuming the role of a graphical editor of a media company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#set-up",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#set-up",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "T he pac::p_load() function to load the required R packages in the working environment. The following packages are used in this set up:\n\nggthemes: Extra themes, geoms, and scales for ggplot2.\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nggridges: a ggplot2 extension specially designed for plotting ridgeline plots\ncolorspace:\nggiraph: for making ‘ggplot’ graphics interactive.\nplotly: R library for plotting interactive statistical graphs.\npatchwork: specially designed for combining separate ggplot2 graphs into a single figure.\n\n\n# load tidyverse from pacman\npacman::p_load(tidyverse,dplyr,ggridges,ggthemes,colorspace,ggiraph,plotly,patchwork)\n\n\n\n\nFive sets of data are provided for this exercise:\n\n2023 Quarter 1 Residential Transaction: ResidentialTransaction20240308160536.csv\n2023 Quarter 2 Residential Transaction: ResidentialTransaction20240308160736.csv\n2023 Quarter 3 Residential Transaction: ResidentialTransaction20240308161009.csv\n2023 Quarter 4 Residential Transaction: ResidentialTransaction20240308161109.csv\n2024 Quarter 1 Residential Transaction: ResidentialTransaction20240414220633.csv\n\nAll five sets of data consists of past transactions between Q1 of 2023 to Q1 of 2024, with 21 variables that will be explored in detail after the data sets are imported.\n\n# load transaction data using readr, part of tidyverse package\ndata.23Q1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata.23Q2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata.23Q3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata.23Q4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata.24Q1 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\n\nTo add new column Quarter into each of the csv file.\n\ndata.23Q1$Quarter &lt;- rep('23Q1',nrow(data.23Q1))\ndata.23Q2$Quarter &lt;- rep('23Q2',nrow(data.23Q2))\ndata.23Q3$Quarter &lt;- rep('23Q3',nrow(data.23Q3))\ndata.23Q4$Quarter &lt;-rep('23Q4',nrow(data.23Q4))\ndata.24Q1$Quarter &lt;- rep('24Q1',nrow(data.24Q1))\n\nCombining all the data set into one\n\ndf &lt;- rbind(data.23Q1,data.23Q2,data.23Q3,data.23Q4,data.24Q1)\n\nTo have a basic understanding of all 21 variables, glimpse() is used with 2024 Q1 data. We can see that there are 21 columns, with the following data types:\n\ndoubles:\n\nTransacted Price ($)\nArea (SQFT)\nUnit Price ($ PSF)\nArea (SQM)\nUnit Price ($ PSM)\nNumber of Units\n\ncharacters: the rest of the 16 variables, including Quarter\n\n\n# have a basic understanding for all 22 variables\nglimpse(df)\n\nRows: 26,806\nColumns: 22\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n$ Quarter                       &lt;chr&gt; \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", \"23Q1\", …\n\n\n\n\n\n\nggplot(data = df, \n       aes(x=Quarter, fill = `Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\n\nggplot(data = df, \n       aes(y = `Transacted Price ($)`, x = Quarter)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nFrom the boxplot above, it seems like there are outliers in 23Q1 that are extremely far from the rest of the data points. We may choose to exclude these transactions to have a better data set. However, given that this are all the actual transactions that have happened in the past five quarters, it may not be a good idea to exclude these data.\nHence, we could explore other options such as comparing the selecting similar property types to make more meaningful conclusion.\n\nggplot(data = df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = 0.5)) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Transacted Price\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Transacted Price\",\n    expand = c(0,0)\n  ) +\n  scale_y_discrete(\n    name = NULL,\n    expand = expansion(add = c(0.2,2.6))\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(data = df, \n       aes(x=`Type of Area`,\n           fill = `Type of Sale`)) +\n  geom_bar() \n\n\n\n\n\n\n\n\nLooking at the bar chart above, it might be a good way to filter the data based on Type of Area to do further analysis. To lend some background context to this segregation, you can refer to this link: Landed vs. Strata Landed From this link, we can also derive further segregation by Property Type.\n\nland_df &lt;- filter(df, `Type of Area` == 'Land')\nstrata_df&lt;- filter(df, `Type of Area` == 'Strata')\n\n\nggplot(data = land_df, \n       aes(x= `Property Type`,\n           fill = `Purchaser Address Indicator`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~Quarter)\n\n\n\n\n\n\n\n\n\nggplot(data = land_df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_wrap(~`Property Type`,scales = \"free\")\n\n\n\n\n\n\n\n\n\nggplot(data = land_df, \n       aes(y = `Transacted Price ($)`, x = Quarter)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nmean_strata_by_property_type &lt;- strata_df %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\nggplot(strata_df,\n       aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nmean_land_by_property_type &lt;- land_df %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(mean_price = mean(`Transacted Price ($)`))\n\nggplot(land_df,\n       aes(x=`Area (SQM)`, \n           y = `Transacted Price ($)`,\n           color = `Property Type`)) +\n  geom_point_interactive() +\n  coord_cartesian(xlim=c(0,1000),\n                  ylim=c(0,50000000)) +\n  geom_smooth(method = lm, se = FALSE) +\n  facet_wrap(~`Property Type`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nggplot(data = strata_df ,\n       aes(x = `Transacted Price ($)`,\n           y = Quarter,\n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()+\n  facet_wrap(~`Planning Region`, scales = \"free\")\n\n\n\n\n\n\n\n\n\nggplot(data = df,\n       aes(x =`Purchaser Address Indicator`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~`Planning Region`)+\n  ggtitle(\"Purchaser Address Indicator by Planning Region\")\n\n\n\n\n\n\n\n\n\nB &lt;- ggplot(data = land_df,\n       aes(x =`Purchaser Address Indicator`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~`Planning Region`) +\n  ggtitle(\"Land:Purchaser Address Indicator by Planning Region\")\n\n\nC &lt;- ggplot(data = strata_df,\n       aes(x =`Purchaser Address Indicator`,\n           fill = `Type of Sale`)) +\n  geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_grid(~`Planning Region`) +\n  ggtitle(\"Strata:Purchaser Address Indicator by Planning Region\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#data-visualisation",
    "href": "Take-home Exercise/Take-home_Ex01/Take-home_Ex01.html#data-visualisation",
    "title": "Take-home Ex 01",
    "section": "",
    "text": "(B/C)+\n  plot_annotation(tag_levels = 'I')"
  }
]