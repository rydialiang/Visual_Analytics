[
  {
    "objectID": "landing.html",
    "href": "landing.html",
    "title": "My Visual Analytics Learning Journey",
    "section": "",
    "text": "Lesson 1 on 13 Apr 2024:\n\nSetting up my github and netlify account\nLinking git and Quarto.\nLearning to construct website using Quarto in R.\nTried Hands-on Ex01 for visualisation foundation.\nTried In-class Ex01\n\nhow to set up html link in-text, using [text hyperlink](insert html link)\n\n\nLesson 2:"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class Exercise/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages\n\npacman::p_load(tidyverse)\n\n\nrealis.csv &lt;- read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis.csv,\n       aes(x = `Unit Price ($ psm)`)) + \n  geom_histogram()"
  },
  {
    "objectID": "In-class Exercise/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class Exercise/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages\n\npacman::p_load(tidyverse)\n\n\nrealis.csv &lt;- read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis.csv,\n       aes(x = `Unit Price ($ psm)`)) + \n  geom_histogram()"
  },
  {
    "objectID": "Hands-on Exercise/hands-on-ex1.html",
    "href": "Hands-on Exercise/hands-on-ex1.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this site",
    "section": "",
    "text": "This site is created as part my course work in Visual Analytics taught by Professor Kam TS. Through this module, I hope to improve my data visualisation skill.\nSkills of a Data Scientists and my progress thus far:\n\n# My Data\nskill_scores &lt;- data.frame(\n    row.names = c(\"Rydia\"),\n    Mathematics = 9,\n    Predictive_modeling = 5,\n    Coding = 1,\n    Machine_learning = 0,\n    Neural_networks = 0,\n    Database_management = 0,\n    Cloud_computing = 0,\n    Communication = 7,\n    Data_visualisation = 3,\n    Critical_thinking = 7\n)\n\nlibrary(fmsb)\n\n# Define the variable ranges: maximum and minimum\nmax_min &lt;- data.frame(\n    Mathematics = c(10,0),\n    Predictive_modeling = c(10,0),\n    Coding = c(10,0),\n    Machine_learning = c(10,0),\n    Neural_networks = c(10,0),\n    Database_management = c(10,0),\n    Cloud_computing = c(10,0),\n    Communication = c(10,0),\n    Data_visualisation = c(10,0),\n    Critical_thinking = c(10,0)\n)\nrownames(max_min) &lt;- c(\"Max\", \"Min\")\n\ndf &lt;- rbind(max_min, skill_scores)\ndf\n\n      Mathematics Predictive_modeling Coding Machine_learning Neural_networks\nMax            10                  10     10               10              10\nMin             0                   0      0                0               0\nRydia           9                   5      1                0               0\n      Database_management Cloud_computing Communication Data_visualisation\nMax                    10              10            10                 10\nMin                     0               0             0                  0\nRydia                   0               0             7                  3\n      Critical_thinking\nMax                  10\nMin                   0\nRydia                 7\n\nry_data &lt;- df[c(\"Max\", \"Min\", \"Rydia\"), ]\nradarchart(ry_data, vlcex = 0.5)"
  },
  {
    "objectID": "hands-on-ex1.html",
    "href": "hands-on-ex1.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"Hands-on Exercise/data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my first Quarto website",
    "section": "",
    "text": "This is my first Quarto website.\nThe picture below shows my brain working at 100% learning about visual analytics.\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "# load tidyverse from pacman\npacman::p_load(tidyverse)\n\n# load exam data using readr, part of tidyverse package\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n# R base Histogram\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n# ggplot histogram\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n# If the dataset is not already a data.frame, it will be converted to one by fortify().\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n# Bar Chart\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n# Dotplot / scale_y_continuous to turn off y-axis\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n# Histogram, changing geom() \nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill='light blue') \n\n\n\n\n\n\n\n# Histogram, changing aes()\n# This approach can be used to colour, fill and alpha of the geometric.\nggplot(data=exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\") \n\n\n\n\n\n\n\n# Kernel Density Estimate (KDE), changing aes()\nggplot(data=exam_data, \n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()   \n\n\n\n\n\n\n\n# Boxplot, notches to determine if median differs\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch=T) \n\n\n\n\n\n\n\n# Violin plot - comparing multiple data distributions\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n# geom_point - scatterplot\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n# Combining geom objects\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n# Using stat_summary(), use fun=\"mean\", fun.y has deprecated\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=4)  \n\n\n\n\n\n\n\n# Using stat in geom_point(), use fun instead of fun.y\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\n\n\n\n\n\n# geom_smooth() for best fit curve on scatterplot, default method = loess\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)"
  },
  {
    "objectID": "journey.html",
    "href": "journey.html",
    "title": "My Visual Analytics Learning Journey",
    "section": "",
    "text": "Lesson 1 on 13 Apr 2024:\n\nSetting up my github and netlify account\nLinking git and Quarto.\nLearning to construct website using Quarto in R.\nTried Hands-on Ex01 for visualisation foundation.\nTried In-class Ex01\n\nhow to set up html link in-text, using [text hyperlink](insert html link)\n\n\nLesson 2 on 20 Apr 2024:"
  }
]